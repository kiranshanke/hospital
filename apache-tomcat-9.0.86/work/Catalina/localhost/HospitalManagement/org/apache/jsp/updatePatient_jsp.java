/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2025-04-11 09:17:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class updatePatient_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Update Patient</title>\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            background-color: #f4f4f4;\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: center;\n");
      out.write("            align-items: center;\n");
      out.write("            height: 100vh;\n");
      out.write("            margin: 0;\n");
      out.write("        }\n");
      out.write("        .container {\n");
      out.write("            background-color: #fff;\n");
      out.write("            padding: 30px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n");
      out.write("            width: 100%;\n");
      out.write("            max-width: 600px;\n");
      out.write("        }\n");
      out.write("        h2 {\n");
      out.write("            font-size: 24px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            color: #333;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("        .form-group {\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("        .form-group label {\n");
      out.write("            font-size: 14px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: #333;\n");
      out.write("            margin-bottom: 5px;\n");
      out.write("            display: block;\n");
      out.write("        }\n");
      out.write("        .form-group input {\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 12px;\n");
      out.write("            border-radius: 6px;\n");
      out.write("            border: 1px solid #ccc;\n");
      out.write("            font-size: 14px;\n");
      out.write("            margin-top: 5px;\n");
      out.write("        }\n");
      out.write("        .form-group .gender {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-evenly;\n");
      out.write("            margin-top: 5px;\n");
      out.write("        }\n");
      out.write("        button {\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 12px;\n");
      out.write("            background-color: #6c5ce7;\n");
      out.write("            color: white;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 6px;\n");
      out.write("            font-size: 16px;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("        button:hover {\n");
      out.write("            background-color: #5a4ae3;\n");
      out.write("        }\n");
      out.write("        .message {\n");
      out.write("            text-align: center;\n");
      out.write("            color: red;\n");
      out.write("            margin-top: 10px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("    <h2>Update Patient</h2>\n");
      out.write("\n");

    String errorMessage = null;
    String patientId = request.getParameter("patient_id");
    String firstName = "", lastName = "", dob = "", contactNumber = "", gender = "";

    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital_db", "root", "root");

        if ("POST".equalsIgnoreCase(request.getMethod())) {
            firstName = request.getParameter("firstName");
            lastName = request.getParameter("lastName");
            dob = request.getParameter("dob");
            contactNumber = request.getParameter("contactNumber");
            gender = request.getParameter("gender");

            if (firstName == null || firstName.isEmpty() ||
                lastName == null || lastName.isEmpty() ||
                dob == null || dob.isEmpty() ||
                contactNumber == null || contactNumber.isEmpty() ||
                gender == null || gender.isEmpty()) {
                errorMessage = "All fields are required.";
            } else if (!contactNumber.matches("\\d{10}")) {
                errorMessage = "Contact number must be exactly 10 digits.";
            } else {
                String updateSQL = "UPDATE patientD SET first_name=?, last_name=?, dob=?, contact_number=?, gender=? WHERE patient_id=?";
                stmt = conn.prepareStatement(updateSQL);
                stmt.setString(1, firstName);
                stmt.setString(2, lastName);
                stmt.setString(3, dob);
                stmt.setString(4, contactNumber);
                stmt.setString(5, gender);
                stmt.setString(6, patientId);

                int result = stmt.executeUpdate();
                if (result > 0) {
                    response.sendRedirect("viewPatientHistory.jsp");
                    return;
                } else {
                    errorMessage = "Failed to update patient details.";
                }
            }
        }

        // Prefill for GET or failed POST
        if (!"POST".equalsIgnoreCase(request.getMethod()) || errorMessage != null) {
            String fetchSQL = "SELECT * FROM patientD WHERE patient_id=?";
            stmt = conn.prepareStatement(fetchSQL);
            stmt.setString(1, patientId);
            rs = stmt.executeQuery();
            if (rs.next()) {
                firstName = rs.getString("first_name");
                lastName = rs.getString("last_name");
                dob = rs.getString("dob");
                contactNumber = rs.getString("contact_number");
                gender = rs.getString("gender");
            } else {
                errorMessage = "Patient not found.";
            }
        }

    } catch (Exception e) {
        e.printStackTrace();
        errorMessage = "An unexpected error occurred: " + e.getMessage();
    } finally {
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ignored) {}
    }

      out.write("\n");
      out.write("\n");
      out.write("    <form method=\"post\">\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label>First Name:</label>\n");
      out.write("            <input type=\"text\" name=\"firstName\" value=\"");
      out.print( firstName );
      out.write("\" required>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label>Last Name:</label>\n");
      out.write("            <input type=\"text\" name=\"lastName\" value=\"");
      out.print( lastName );
      out.write("\" required>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label>Date of Birth:</label>\n");
      out.write("            <input type=\"date\" name=\"dob\" value=\"");
      out.print( dob );
      out.write("\" required>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label>Contact Number:</label>\n");
      out.write("            <input type=\"text\" name=\"contactNumber\" value=\"");
      out.print( contactNumber );
      out.write("\" required pattern=\"\\d{10}\">\n");
      out.write("        </div>\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label>Gender:</label>\n");
      out.write("            <div class=\"gender\">\n");
      out.write("                <label><input type=\"radio\" name=\"gender\" value=\"Male\" ");
      out.print( "Male".equals(gender) ? "checked" : "" );
      out.write("> Male</label>\n");
      out.write("                <label><input type=\"radio\" name=\"gender\" value=\"Female\" ");
      out.print( "Female".equals(gender) ? "checked" : "" );
      out.write("> Female</label>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <button type=\"submit\">Update Patient</button>\n");
      out.write("    </form>\n");
      out.write("\n");
      out.write("    ");
 if (errorMessage != null) { 
      out.write("\n");
      out.write("        <div class=\"message\">");
      out.print( errorMessage );
      out.write("</div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
